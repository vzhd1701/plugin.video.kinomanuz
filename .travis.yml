os: linux
dist: bionic
language: python
python:
  - "2.7"
env:
  - KODI_ADDON=plugin.video.kinomanuz
before_install:
  - sudo apt-get install jq proxychains4
  - travis_retry curl -LSs -o codacy-coverage-reporter-assembly.jar "$(curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(".jar"))) | .[0].browser_download_url')"
install: pip install codecov mock future Kodistubs requests
script:
  - echo -e "[ProxyList]\nsocks5 $TIX_PROXY_HOST $TIX_PROXY_CONF" >tix.conf
  - proxychains4 -q -f tix.conf coverage run -m unittest discover
after_success:
  - codecov
  - coverage xml
  - java -jar codacy-coverage-reporter-assembly.jar report -l Python -r coverage.xml
before_deploy:
  - wget -nc https://raw.githubusercontent.com/vzhd1701/random.scripts/master/kodi.repository.deploy/deploy.sh
  - wget -nc https://raw.githubusercontent.com/vzhd1701/random.scripts/master/kodi.repository.deploy/generate_addons_xml.py
  - wget -nc https://raw.githubusercontent.com/vzhd1701/random.scripts/master/sign_key.asc.enc
  - openssl aes-256-cbc -salt -pbkdf2 -k "$REPO_SIGN_KEY_PASS" -in sign_key.asc.enc -out sign_key.asc -d
  - gpg --import sign_key.asc
  - bash deploy.sh -z
  - export RELEASE_ZIP=$(ls *.zip)
deploy:
  # Package and upload addon into latest release assets
  - provider: releases
    token: $REPO_GH_TOKEN
    file_glob: true
    file: $RELEASE_ZIP
    skip_cleanup: true
    on:
      tags: true
      python: "2.7"
  # Deploy to my Kodi repo
  - provider: script
    script: bash deploy.sh -r
    skip_cleanup: true
    on:
      tags: true
      python: "2.7"
